@model IEnumerable<InsuranceAgency.Models.PaymentClaim>

@{
    ViewData["Title"] = "Index";
    var statuses = Enum.GetValues(typeof(InsuranceAgency.Models.ClaimStatus))
        .Cast<InsuranceAgency.Models.ClaimStatus>()
        .Where(s => s != InsuranceAgency.Models.ClaimStatus.Подписана); // Исключим статус "Подписана", если не нужен
}

<h1>Payment Claims</h1>

<div>
    <input type="text" id="searchInput" placeholder="Поиск по Email или ФИО клиента" class="form-control" />
    @if (User.IsInRole("Accountant"))
    {
        <select id="statusFilter" class="form-control">
            <option value="3">Ожидает оплаты</option>
        </select>
    }
    else
    {
        <select id="statusFilter" class="form-control">
            <option value="">Все</option>
            @foreach (var status in statuses)
            {
                <option value="@status">@status</option>
            }
        </select>
    }
    
</div>

@if (User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Создать новый</a>
    </p>
}


<div id="claimsTable">
    @await Html.PartialAsync("_ClaimTable", Model)
</div>

@section Scripts {
    <script src="/lib/jquery/dist/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            function filterClaims() {
                var status = $('#statusFilter').val();
                var search = $('#searchInput').val();

                $.get('@Url.Action("Filter", "PaymentClaims")', { status: status, search: search })
                    .done(function (data) {
                        $('#claimsTable').html(data);
                    });
            }

            $('#statusFilter').change(filterClaims);
            $('#searchInput').keyup(filterClaims);
            filterClaims();
        });
    </script>
    <script>
        function updateStatus(claimId, newStatus) {
            $.post('/PaymentClaims/UpdateStatus', { id: claimId, newStatus: newStatus }, function () {
                location.reload();
            });
        }
    </script>
}
