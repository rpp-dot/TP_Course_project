@model IEnumerable<InsuranceAgency.Models.PolicyClaim>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

@if (User.IsInRole("Administrator"))
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<div>
    <label for="statusFilter">Фильтр по статусу:</label>
    <select id="statusFilter">
        <option value="">Все</option>
        @foreach (var status in Enum.GetValues(typeof(ClaimStatus)))
        {
            <option value="@status">@status</option>
        }
    </select>

    <input type="text" id="searchQuery" placeholder="Поиск по Email или ФИО" />
</div>

<table id="claimsTable" class="table">
    <thead>
        <tr>
            <th>ФИО клиента</th>
            <th>Объект страхования</th>
            <th>Email клиента</th>
            <th>Описание</th>
            <th>Дата заявки</th>
            <th>Статус</th>
            <th>Действия</th>
        </tr>
    </thead>
    @await Html.PartialAsync("_PolicyClaimsTable", Model)
</table>
<script src="/lib/jquery/dist/jquery.min.js"></script>
<script>
    
    $(document).ready(function () {
        $("#statusFilter, #searchQuery").on("change keyup", function () {
            var status = $("#statusFilter").val();
            var query = $("#searchQuery").val();

            $.get("/PolicyClaims/FilterByStatus", { status: status, searchQuery: query }, function (data) {
                $("#claimsTable").html(data);
            });
        });
    });
</script>
<script>
    function updateStatus(claimId, newStatus) {
        $.post('/PolicyClaims/UpdateStatus', { id: claimId, newStatus: newStatus }, function () {
            location.reload();
        });
    }
    
</script>